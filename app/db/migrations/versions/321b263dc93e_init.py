"""init

Revision ID: 321b263dc93e
Revises: 
Create Date: 2024-03-01 22:54:43.045635

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '321b263dc93e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    #op.execute(sa.text("CREATE TYPE task_type AS ENUM ('base');"))
    #op.execute(sa.text("CREATE TYPE role AS ENUM ('member', 'admin');"))
    #op.execute(sa.text("CREATE TYPE tasks_tatus AS ENUM ('started', 'completed', 'not_completed');"))

    op.create_table(
        'tasks',
        sa.Column('type', sa.Enum('base', name='task_type'), server_default='base', nullable=False),
        sa.Column('link', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('points', sa.Integer(), server_default='0', nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.CheckConstraint('points >= 0')
    )

    op.create_table(
        'users',
        sa.Column('email', sa.String(), nullable=False),
        sa.Column('role', sa.Enum('member', 'admin', name='role'), server_default='member', nullable=False),
        sa.Column('balance', sa.Integer(), server_default='0', nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
        sa.CheckConstraint('balance >= 0')
    )

    op.create_table(
        'user_tasks',
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('task_id', sa.Integer(), nullable=False),
        sa.Column('points', sa.Integer(), nullable=False),
        sa.Column('status', sa.Enum('started', 'completed', 'not_completed', name='tasks_tatus'), server_default='started', nullable=False),
        sa.Column('checked_at', sa.DateTime(), nullable=True),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.CheckConstraint('points >= 0')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_tasks')
    op.drop_table('users')
    op.drop_table('tasks')
    
    op.execute(sa.text("DROP TYPE IF EXISTS task_type;"))
    op.execute(sa.text("DROP TYPE IF EXISTS role;"))
    op.execute(sa.text("DROP TYPE IF EXISTS tasks_tatus;"))
    # ### end Alembic commands ###
